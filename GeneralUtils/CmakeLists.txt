cmake_minimum_required(VERSION 3.16)

project(GeneralUtils LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# 添加动态库
add_library(${PROJECT_NAME} SHARED)

# DLL 导出宏
target_compile_definitions(${PROJECT_NAME} PRIVATE PLUGINFRAMEWORK_EXPORTS)

# 包含头文件目录
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

FILE(GLOB INCLUDE *.h)
FILE(GLOB SOURCE  *.cpp)

# 分组显示（VS友好）
source_group(01_Include FILES  ${INCLUDE})
source_group(02_Source FILES  ${SOURCE})

# 显式添加头文件
target_sources(${PROJECT_NAME} PRIVATE  
    ${INCLUDE}
    ${SOURCE})

# 设置输出目录
if(WIN32)
    set_target_properties(${PROJECT_NAME} PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJECT_NAME}
    )
else()
    set_target_properties(${PROJECT_NAME} PROPERTIES
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJECT_NAME}
        ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJECT_NAME}
    )
endif()

# Windows 特定设置
if(WIN32 AND MSVC)
    set_target_properties(${PROJECT_NAME} PROPERTIES
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>DLL"
    )
endif()

# Linux/macOS 链接 dl 库
if(UNIX AND NOT APPLE)
    target_link_libraries(${PROJECT_NAME} PRIVATE dl)
endif()
